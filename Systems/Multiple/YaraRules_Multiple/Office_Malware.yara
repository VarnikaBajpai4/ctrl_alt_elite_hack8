rule Office_Macro_Malware {
    meta:
        description = "Detects suspicious Office macro patterns"
        severity = "high"
        category = "office"
    
    strings:
        $shell = "WScript.Shell" nocase
        $cmd = "cmd.exe" nocase
        $powershell = "powershell" nocase
        $download = "URLDownloadToFile" nocase
        $createobject = "CreateObject" nocase
        $autoopen = "AutoOpen" nocase
        $document_open = "Document_Open" nocase
        $workbook_open = "Workbook_Open" nocase
        
    condition:
        (uint16(0) == 0xD0CF) and // OLE Compound File signature
        (
            (2 of ($shell, $cmd, $powershell)) or
            ($download and $createobject) or
            (1 of ($autoopen, $document_open, $workbook_open) and 1 of ($shell, $cmd, $powershell))
        )
}

rule Suspicious_OLE_Object {
    meta:
        description = "Detects suspicious OLE objects in Office documents"
        severity = "medium"
        category = "office"
    
    strings:
        $ole = "OLEObject" nocase
        $package = "Package" nocase
        $embed = "Embedded" nocase
        $exe = ".exe" nocase
        $dll = ".dll" nocase
        $vbs = ".vbs" nocase
        $ps1 = ".ps1" nocase
        
    condition:
        (uint16(0) == 0xD0CF) and // OLE Compound File signature
        ($ole or $package or $embed) and
        (1 of ($exe, $dll, $vbs, $ps1))
}

rule PDF_JavaScript_Exploit {
    meta:
        description = "Detects PDF JavaScript exploitation attempts"
        severity = "high"
        category = "pdf"
    
    strings:
        $js = "/JavaScript" nocase
        $openaction = "/OpenAction" nocase
        $launch = "/Launch" nocase
        $uri = "/URI" nocase
        $js_code = "eval(" nocase
        $unescape = "unescape(" nocase
        $shell = "cmd.exe" nocase
        $powershell = "powershell" nocase
        
    condition:
        (uint32(0) == 0x25504446) and // PDF signature
        (
            ($js and 1 of ($js_code, $unescape)) or
            (($openaction or $launch) and 1 of ($shell, $powershell)) or
            ($uri and 1 of ($shell, $powershell))
        )
}

rule PDF_Embedded_File {
    meta:
        description = "Detects embedded files in PDF documents"
        severity = "medium"
        category = "pdf"
    
    strings:
        $embedded = "/EmbeddedFile" nocase
        $exe = ".exe" nocase
        $dll = ".dll" nocase
        $vbs = ".vbs" nocase
        $ps1 = ".ps1" nocase
        $zip = ".zip" nocase
        $rar = ".rar" nocase
        
    condition:
        (uint32(0) == 0x25504446) and // PDF signature
        $embedded and
        (1 of ($exe, $dll, $vbs, $ps1, $zip, $rar))
} 